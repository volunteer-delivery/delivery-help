version: 0.2

env:
  variables:
    ENV: "production"
    CR_LABEL: "https://github.com/volunteer-delivery"
    DOCKER_BUILDKIT: 1
    BUILDKIT_INLINE_CACHE: 1
    SECRETS_LOADER_DOWNLOAD: https://raw.githubusercontent.com/volunteer-delivery/secrets-loader/main/build/linux-arm64

phases:
  pre_build:
    commands:
      - curl $SECRETS_LOADER_DOWNLOAD -s -o tmp/secrets-loader
      - chmod +x tmp/secrets-loader
      - export $(tmp/secrets-loader get -r $AWS_REGION -p /$ENV -l deploy) > /dev/null
      - echo $CR_PASSWORD | docker login $CR_HOST -u $CR_USERNAME --password-stdin

      - export CR_BASE="$CR_HOST/$CR_USERNAME"
      - export FRONTEND_TAG="$CR_BASE/delivery-help/frontend"
      - export BACKEND_TAG="$CR_BASE/delivery-help/backend"

      - docker pull $CR_BASE/node:latest || true
      - docker pull $CR_BASE/nginx:latest || true
      - docker pull $FRONTEND_TAG:$ENV-builder || true
      - docker pull $BACKEND_TAG:$ENV-builder || true
      - docker pull $FRONTEND_TAG:$ENV || true
      - docker pull $BACKEND_TAG:$ENV || true

  build:
    commands:
      - >
        docker build \
          --tag frontend-builder \
          --target builder \
          --file ci/$ENV/frontend/Dockerfile \
          --cache-from $FRONTEND_TAG:$ENV-builder \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_HOST \
          --build-arg CR_USERNAME \
          --build-arg CR_LABEL \
          --build-arg FRONTEND_API_URL \
          --build-arg FRONTEND_SOCKET_URL \
          --build-arg FRONTEND_ENV \
          --build-arg FRONTEND_BUGSNAG_KEY \
          .

      - >
        docker build \
          --tag frontend-app \
          --file ci/$ENV/frontend/Dockerfile \
          --cache-from frontend-builder \
          --cache-from $FRONTEND_TAG:$ENV \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_HOST \
          --build-arg CR_USERNAME \
          --build-arg CR_LABEL \
          --build-arg FRONTEND_API_URL \
          --build-arg FRONTEND_SOCKET_URL \
          --build-arg FRONTEND_ENV \
          --build-arg FRONTEND_BUGSNAG_KEY \
          .

      - >
        docker build \
          --tag backend-builder \
          --target builder \
          --file ci/$ENV/backend/Dockerfile \
          --cache-from $BACKEND_TAG:$ENV-builder \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_HOST \
          --build-arg CR_USERNAME \
          --build-arg CR_LABEL \
          .

      - >
        docker build \
          --tag backend-app \
          --file ci/$ENV/backend/Dockerfile \
          --cache-from backend-builder \
          --cache-from $BACKEND_TAG:$ENV \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_HOST \
          --build-arg CR_USERNAME \
          --build-arg CR_LABEL \
          .

  post_build:
    commands:
      - docker tag frontend-builder $FRONTEND_TAG:$ENV-builder
      - docker push $FRONTEND_TAG:$ENV-builder

      - docker tag frontend-app $FRONTEND_TAG:$ENV
      - docker push $FRONTEND_TAG:$ENV

      - docker tag backend-builder $BACKEND_TAG:$ENV-builder
      - docker push $BACKEND_TAG:$ENV-builder

      - docker tag backend-app $BACKEND_TAG:$ENV
      - docker push $BACKEND_TAG:$ENV

      - mkdir tmp/artifact
      - cp ci/$ENV/docker-compose.yaml tmp/artifact/
      - cp ci/$ENV/appspec.yml tmp/artifact/
      - cp -r ci/$ENV/hooks tmp/artifact/
      - cp tmp/secrets-loader tmp/artifact/

artifacts:
  files: ['./**/*']
  base-directory: tmp/artifact

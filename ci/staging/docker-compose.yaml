version: '3.8'

x-backend-common: &backend_common
  restart: on-failure
  volumes:
    - /tmp/delivery-help:/app-tmp
  env_file: .env
  depends_on:
    - postgres

services:
  frontend:
    restart: on-failure
    image: ${REPO_IMAGE}/frontend:${APP_VERSION}
    command: nginx -g 'daemon off;'
    env_file: .env
    ports:
      - "80:80"
    depends_on:
      - backend-main
      - backend-bot-telegram
      - backend-websocket

  backend-main:
    <<: *backend_common
    image: ${REPO_IMAGE}/backend-main:${APP_VERSION}
    command: node ./dist/apps/main/apps/main/src/main
    links:
      - backend-bot-telegram
      - backend-websocket

  backend-bot-telegram:
    <<: *backend_common
    image: ${REPO_IMAGE}/backend-bot-telegram:${APP_VERSION}
    command: node ./dist/apps/bot-telegram/apps/bot-telegram/src/main
    links:
      - backend-websocket

  backend-websocket:
    <<: *backend_common
    image: ${REPO_IMAGE}/backend-websocket:${APP_VERSION}
    command: node ./dist/apps/websocket/apps/websocket/src/main

  db-util:
    image: ${REPO_IMAGE}/db-util:${APP_VERSION}
    command: echo "success"
    volumes:
      - /tmp/delivery-help:/app-tmp
    env_file: .env
    depends_on:
      - postgres


  postgres:
    image: postgres:14.6-alpine
    restart: on-failure
    volumes:
      - data-postgres:/var/lib/postgresql/data
    env_file: .env
    environment:
      POSTGRES_PASSWORD: password

volumes:
  data-postgres:
    driver: local

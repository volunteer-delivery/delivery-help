version: 0.2

env:
  variables:
    ENV: "staging"
    DOCKER_BUILDKIT: 1
    BUILDKIT_INLINE_CACHE: 1
    CR_LABEL: "https://github.com/volunteer-delivery"
    SECRETS_LOADER_DOWNLOAD: https://raw.githubusercontent.com/volunteer-delivery/secrets-loader/main/build/linux-arm64
    SECRETS_LOADER: "tmp/secrets-loader"
    ARTIFACT_DIR: "tmp/artifact"


phases:
  pre_build:
    commands:
      - curl "$SECRETS_LOADER_DOWNLOAD" -s -o "$SECRETS_LOADER"
      - chmod +x "$SECRETS_LOADER"
      - export $("$SECRETS_LOADER" get -r "$AWS_REGION" -p "/$ENV" -l deploy) > /dev/null
      - export $("$SECRETS_LOADER" get -r "$AWS_REGION" -p /cr) > /dev/null
      - echo "$CR_PASSWORD" | docker login "$CR_HOST" -u "$CR_USERNAME" --password-stdin

      - export APP_VERSION="$CODEBUILD_BUILD_NUMBER"
      - export CR_BASE="$CR_HOST/$CR_USERNAME"
      - export REPO_IMAGE="$CR_BASE/$ENV-delivery-help"
      - export BACKEND_IMAGE="$CR_BASE/$ENV-delivery-help/backend"

      - docker pull "$CR_BASE/node:latest" || true
      - docker pull "$CR_BASE/nginx:latest" || true

  build:
    commands:
      - ./ci/$ENV/build/frontend.sh
      - ./ci/$ENV/build/backend-node.sh
      - ./ci/$ENV/build/backend-source.sh
      - ./ci/$ENV/build/backend-microservice.sh main
      - ./ci/$ENV/build/backend-microservice.sh bot-telegram
      - ./ci/$ENV/build/backend-microservice.sh websocket

  post_build:
    commands:
      - mkdir "$ARTIFACT_DIR"
      - echo "$APP_VERSION" >> "$ARTIFACT_DIR/app-version"
      - envsubst < "ci/$ENV/docker-compose.yaml" >> "$ARTIFACT_DIR/docker-compose.yaml"
      - cp "ci/$ENV/appspec.yml" "$ARTIFACT_DIR/"
      - cp -r "ci/$ENV/hooks" "$ARTIFACT_DIR/"
      - cp "$SECRETS_LOADER" "$ARTIFACT_DIR/"


artifacts:
  files: ['./**/*']
  base-directory: tmp/artifact

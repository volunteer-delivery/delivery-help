version: '3.8'

x-api-common: &backend-common
  image: delivery_help_backend
  build: ./backend
  stdin_open: true
  tty: true
  restart: always
  volumes:
    - ./backend/:/app
    - ./backend/node_modules:/app/node_modules
    - /tmp/delivery-help:/app-tmp
  env_file: .env
  depends_on:
    - postgres

services:
  nginx:
    restart: always
    image: nginx:1.21.6-alpine
    volumes:
      - ./ci/development/config.nginx:/etc/nginx/conf.d/default.conf
    ports:
      - '8080:80'
    depends_on:
      - frontend
      - backend-main
      - backend-websocket
      - backend-bot-telegram

  frontend:
    restart: always
    build: ./frontend
    command: bash -c "rm -rf /tmp/nitro/worker-* && npm run dev"
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
    env_file: .env
    ports:
      - '24678:24678'

  backend-main:
    <<: *backend-common
    command: npm run start:dev main
    links:
      - backend-websocket
      - backend-bot-telegram

  backend-websocket:
    <<: *backend-common
    command: npm run start:dev websocket

  backend-bot-telegram:
    <<: *backend-common
    command: npm run start:dev bot-telegram
    links:
      - backend-websocket

  postgres:
    image: postgres:15.1-alpine
    volumes:
      - data-postgres:/var/lib/postgresql/data
    env_file: .env

volumes:
  data-postgres:
    driver: local

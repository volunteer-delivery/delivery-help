generator client {
  provider = "prisma-client-js"
  output   = "../libs/prisma/src/client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Driver {
  id         String  @id @default(uuid()) @db.VarChar(36)
  telegramId String? @unique
  name       String
  phone      String
  rides      Ride[]
}

model Ride {
  id            String        @id @default(uuid()) @db.VarChar(36)
  departureTime DateTime
  destination   Address       @relation("rideDestination", fields: [destinationId], references: [id])
  destinationId String        @unique @db.VarChar(36)
  driver        Driver        @relation(fields: [driverId], references: [id])
  driverId      String        @db.VarChar(36)
  from          Address       @relation("rideAdress", fields: [fromId], references: [id])
  fromId        String        @unique @db.VarChar(36)
  status        RideStatus
  vehicle       Vehicle
  comments      RideComment[]
  volunteer     User?         @relation(fields: [volunteerId], references: [id])
  volunteerId   String?       @db.VarChar(36)
}

model Address {
  id              String  @id @default(uuid()) @db.VarChar(36)
  city            String? @db.VarChar()
  country         String  @db.VarChar()
  rideDestination Ride?   @relation("rideDestination")
  rideAdress      Ride?   @relation("rideAdress")
}

enum RideStatus {
  PENDING  @map("PENDING")
  ACTIVE   @map("ACTIVE")
  FINISHED @map("FINISHED")
}

enum Vehicle {
  CAR   @map("CAR")
  VAN   @map("VAN")
  TRUCK @map("TRUCK")
}

model RideComment {
  id        String   @id @default(uuid()) @db.VarChar(36)
  createdAt DateTime @default(now())
  text      String
  ride      Ride     @relation(fields: [rideId], references: [id])
  rideId    String   @db.VarChar(36)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.VarChar(36)
}

model User {
  id           String        @id @default(uuid()) @db.VarChar(36)
  password     String
  name         String        @unique @db.VarChar(255)
  rides        Ride[]
  rideComments RideComment[]
}
